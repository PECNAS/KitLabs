* Russian DIGITAL LIBRARY 
*
* ----------------------------------------------------------- K155LA3 ------
*  Quad 2-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-3 to 2-7
*  bss    2/2/94
*
.SUBCKT K155LA3 1 2 3
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1 2 3
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_00 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  K155LA3
*

* ----------------------------------------------------------- K155LA3_X4 ------
*  Quad 2-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-3 to 2-7
*  bss    2/2/94
*
.SUBCKT K155LA3_X4 1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1 2 3
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nand(2) DPWR DGND
+     4 5 6
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nand(2) DPWR DGND
+     7 8 9
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 nand(2) DPWR DGND
+     10 11 12
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_00 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  K155LA3_X4
*


*
* ----------------------------------------------------------- K155LE1 ------
*  Quad 2-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-13 to 2-17
*  bss    2/3/94
*
.SUBCKT K155LE1  2 3 1
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     2 3 1
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_02 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LE1
*

*
* ----------------------------------------------------------- K155LE1_X4 ------
*  Quad 2-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-13 to 2-17
*  bss    2/3/94
*
.SUBCKT K155LE1_X4  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1 2 3
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(2) DPWR DGND
+     4 5 6
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nor(2) DPWR DGND
+     7 8 9
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 nor(2) DPWR DGND
+     10 11 12
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_02 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LE1_X4
*


*
* ----------------------------------------------------------- K155LN1 ------
*  Hex Inverters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-25 to 2-29
*  bss    2/3/94
*
.SUBCKT K155LN1  1 2
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1 2
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_04 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LN1


*
*
* ----------------------------------------------------------- K155LN1_X6 ------
*  Hex Inverters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-25 to 2-29
*  bss    2/3/94
*
.SUBCKT K155LN1_X6  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1 2
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     3 4
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv DPWR DGND
+     5 6
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inv DPWR DGND
+     7 8
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     9 10
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 inv DPWR DGND
+     11 12
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_04 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LN1_X6
*
*
* ----------------------------------------------------------- K155LI1 ------
*  Quad 2-Input And Gates   
*
*  The TTL Logic Data Book, 1988, TI Pages 2-41 to 2-45
*  bss    2/3/94
*
.SUBCKT K155LI1   1 2 3
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1 2 3
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_08 ugate (tplhTY=17.5ns tplhMX=27ns tphlTY=12ns tphlMX=19ns)

.ENDS  K155LI1

*
*
* ----------------------------------------------------------- K155LI1_X4 ------
*  Quad 2-Input And Gates   
*
*  The TTL Logic Data Book, 1988, TI Pages 2-41 to 2-45
*  bss    2/3/94
*
.SUBCKT K155LI1_X4   1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1 2 3
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 and(2) DPWR DGND
+     4 5 6
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 and(2) DPWR DGND
+     7 8 9
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     10 11 12
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}


.model DLY_08 ugate (tplhTY=17.5ns tplhMX=27ns tphlTY=12ns tphlMX=19ns)
.ENDS  K155LI1_X4


* ----------------------------------------------------------- K155LA4 ------
*  Triple 3-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-53 to 2-57
*  bss    2/4/94
*
.SUBCKT K155LA4  1 2 13 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1 2 13 12
+     DLY_10 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_10 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  K155LA4
*
*
* ----------------------------------------------------------- K155LA4_X3 ------
*  Triple 3-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-53 to 2-57
*  bss    2/4/94
*
.SUBCKT K155LA4_X3  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1 2 3 4
+     DLY_10 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nand(3) DPWR DGND
+     5 6 7 8
+     DLY_10 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nand(3) DPWR DGND
+     9 10 11 12
+     DLY_10 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_10 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  K155LA4_X3
*
*


* ----------------------------------------------------------- K555LI3 ------
*  Triple 3-Input And Gates
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-65 to 3-69
*  bss    2/4/94
*
.SUBCKT K555LI3  1 2 13 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(3) DPWR DGND
+     1 2 13 12
+     DLY_H11 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_H11 ugate (tplhTY=7.6ns tplhMX=12ns tphlTY=8.8ns tphlMX=12ns)

.ENDS  K555LI3

* ----------------------------------------------------------- K555LI3_X3 ------
*  Triple 3-Input And Gates
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-65 to 3-69
*  bss    2/4/94
*
.SUBCKT K555LI3_X3  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(3) DPWR DGND
+     1 2 3 4
+     DLY_H11 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 and(3) DPWR DGND
+     5 6 7 8
+     DLY_H11 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 and(3) DPWR DGND
+     9 10 11 12
+     DLY_H11 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_H11 ugate (tplhTY=7.6ns tplhMX=12ns tphlTY=8.8ns tphlMX=12ns)

.ENDS  K555LI3_X3

*
*


*
*
* ----------------------------------------------------------- K155LP4 ------
*  Hex Buffers/Drivers With Open-Collector High-Voltage Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-39 to 2-40
*  bss    2/3/94
*
.SUBCKT K155LP4  1 2
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     1 2
+     DLY_17 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_17 ugate (tplhTY=6ns tplhMX=15ns tphlTY=20ns tphlMX=26ns)

.ENDS  K155LP4


*
*
* ----------------------------------------------------------- K155LA1 ------
*  Dual 4-Input Nand Gates 
*
*  The TTL Logic Data Book, 1988, TI Pages 2-95 to 2-99
*  bss    2/4/94
*
.SUBCKT K155LA1  1 2 4 5 6
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1 2 4 5 6
+     DLY_20 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_20 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LA1


*
*
* ----------------------------------------------------------- K155LA1_X2 ------
*  Dual 4-Input Nand Gates 
*
*  The TTL Logic Data Book, 1988, TI Pages 2-95 to 2-99
*  bss    2/4/94
*
.SUBCKT K155LA1_X2  1 2 3 4 5 6 7 8 9 10
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1 2 3 4 5
+     DLY_20 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nand(4) DPWR DGND
+     6 7 8 9 10
+     DLY_20 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_20 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LA1_X2

*
*
* ----------------------------------------------------------- K555LI6 ------
*  Dual 4-Input And Gates 
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-112 to 3-115
*  bss    2/4/94
*
.SUBCKT K555LI6  1 2 4 5 6
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(4) DPWR DGND
+     1 2 4 5 6
+     DLY_H21 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_H21 ugate (tplhTY=7.6ns tplhMX=12ns tphlTY=8.8ns tphlMX=12ns)

.ENDS  K555LI6


*
*
* ----------------------------------------------------------- K555LI6_X2 ------
*  Dual 4-Input And Gates 
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-112 to 3-115
*  bss    2/4/94
*
.SUBCKT K555LI6_X2  1 2 3 4 5 6 7 8 9 10
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(4) DPWR DGND
+     1 2 3 4 5
+     DLY_H21 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 and(4) DPWR DGND
+     6 7 8 9 10
+     DLY_H21 IO_H MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_H21 ugate (tplhTY=7.6ns tplhMX=12ns tphlTY=8.8ns tphlMX=12ns)

.ENDS  K555LI6_X2





*
*
* ----------------------------------------------------------- K155LE4 ------
*  Triple 3-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-119 to 2-122
*  bss    2/7/94
*
.SUBCKT K155LE4  1 2 13 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(3) DPWR DGND
+     1 2 13 12
+     DLY_27 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_27 ugate (tplhTY=10ns tplhMX=15ns tphlTY=7ns tphlMX=11ns)

.ENDS  K155LE4


*
*
* ----------------------------------------------------------- K155LE4_X3 ------
*  Triple 3-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-119 to 2-122
*  bss    2/7/94
*
.SUBCKT K155LE4_X3  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(3) DPWR DGND
+     1 2 3 4
+     DLY_27 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     5 6 7 8
+     DLY_27 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nor(3) DPWR DGND
+     9 10 11 12
+     DLY_27 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_27 ugate (tplhTY=10ns tplhMX=15ns tphlTY=7ns tphlMX=11ns)

.ENDS  K155LE4_X3



*
*
* ----------------------------------------------------------- K155LA2 ------
*  8-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-127 to 2-131
*  bss    2/8/94
*
.SUBCKT K155LA2  1 2 3 4 5 6 11 12 8
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(8) DPWR DGND
+     1 2 3 4 5 6 11 12 8
+     DLY_30 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_30 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LA2


*
*
* ----------------------------------------------------------- K155LL1 ------
*  Quad 2-Input Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-137 to 2-141
*  bss    2/9/94
*
.SUBCKT K155LL1  1 2 3
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1 2 3
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_32 ugate (tplhTY=10ns tplhMX=15ns tphlTY=14ns tphlMX=22ns)

.ENDS  K155LL1

*
*
* ----------------------------------------------------------- K155LL1_X4 ------
*  Quad 2-Input Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-137 to 2-141
*  bss    2/9/94
*
.SUBCKT K155LL1_X4  1 2 3 4 5 6 7 8 9 10 11 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1 2 3
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 or(2) DPWR DGND
+     4 5 6
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 or(2) DPWR DGND
+     7 8 9
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 or(2) DPWR DGND
+     10 11 12
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_32 ugate (tplhTY=10ns tplhMX=15ns tphlTY=14ns tphlMX=22ns)

.ENDS  K155LL1_X4



*
*
* ----------------------------------------------------------- K555ID6 ------
*  4-Line BCD to 10-Line Decimal Decoder
*
*  The TTL Logic Data Book, 1988, TI Pages 2-167 to 2-172
*  bss    2/10/94
*
.SUBCKT K555ID6  15 14 13 12
+      1 2 3 4 5 6 7 9 10 11
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      15 14 13 12
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~15}
+     bbar = {~14}
+     cbar = {~13}
+     dbar = {~12}
+
+     O0_O = {~(abar & bbar & cbar & dbar)}
+     O1_O = {~(15 & bbar & cbar & dbar)}
+     O2_O = {~(abar & 14 & cbar & dbar)}
+     O3_O = {~(15 & 14 & cbar & dbar)}
+     O4_O = {~(abar & bbar & 13 & dbar)}
+     O5_O = {~(15 & bbar & 13 & dbar)}
+     O6_O = {~(abar & 14 & 13 & dbar)}
+     O7_O = {~(15 & 14 & 13 & dbar)}
+     O8_O = {~(abar & bbar & cbar & 12)}
+     O9_O = {~(15 & bbar & cbar & 12)}

U2 PINDLY (10,0,4) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      15 14 13 12
+      1 2 3 4 5 6 7 9 10 11
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+      ATRAN = {CHANGED(15,0)}
+      BTRAN = {CHANGED(14,0)}
+      CTRAN = {CHANGED(13,0)}
+      DTRAN = {CHANGED(12,0)}
+
+  PINDLY:
+      1 = {
+        CASE(
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,14ns,25ns))}
+
+      2 = {
+        CASE(
+           ATRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      3 = {
+        CASE(
+           BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      4 = {
+        CASE(
+           ATRAN | BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      5 = {
+        CASE(
+           CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      6 = {
+        CASE(
+           ATRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      7 = {
+        CASE(
+           BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      9 = {
+        CASE(
+           ATRAN | BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      10 = {
+        CASE(
+           DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      11 = {
+        CASE(
+           ATRAN | DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}

.ENDS K555ID6
*
*
* ----------------------------------------------------------- K155LR1 ------
*  Dual 2-Wide 2-Input And-Or-Invert Gates (One Gate Expandable)
*
*  The TTL Logic Data Book, 1988, TI Pages 2-189 to 2-191
*  bss    2/14/94
*  The X inputs can only come from a 60 gate
*
.SUBCKT K155LR1 1 13 9 10 11 12 2 3 4 5 8 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+    12 1XB
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,3) DPWR DGND
+    1 13
+    9 10
+    11 1XB
+    8
+    DLY_50 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 aoi(2,2) DPWR DGND
+    2 3
+    4 5
+    6
+    DLY_50 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_50 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS K155LR1
*
*
* ---------------------------------------------------------KR531LR11 ------
*  And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-193 to 2-198
*  bss    2/14/94
*
.SUBCKT KR531LR11 1 13 9 10 8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(2,2) DPWR DGND
+    1 13
+    9 10
+    8
+    DLY_51 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_51 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS KR531LR11
*
*
* ----------------------------------------------------------- K555LR11 ------
*  And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-193 to 2-198
*  bss    2/14/94
*
.SUBCKT K555LR11 1 13 12 11 10 9 2 3 4 5 8 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(3,2) DPWR DGND
+    1 13 12
+    11 10 9
+    8
+    DLY_LS51 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,2) DPWR DGND
+    2 3
+    4 5
+    6
+    DLY_LS51 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS51 ugate (tplhTY=12ns tplhMX=20ns tphlTY=12.5ns tphlMX=20ns)

.ENDS K555LR11
*
*
* ----------------------------------------------------------- K555LR13 ------
*  4-Wide And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-201 to 2-204
*  bss    2/14/94
*
.SUBCKT K555LR13 1 2 3 4 5 9 10 11 12 13 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(3,4) DPWR DGND
+    1 2 $D_HI
+    3 4 5
+    9 10 11
+    12 13 $D_HI
+    6
+    DLY_LS54 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS54 ugate (tplhTY=12ns tplhMX=20ns tphlTY=12.5ns tphlMX=20ns)

.ENDS K555LR13
*
*
* ----------------------------------------------------------- K155LR4 ------
*  2-Wide 4-Input And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-205 to 2-206
*  bss    2/15/94
*
.SUBCKT K155LR4 1 2 3 4 10 11 12 13 8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(4,2) DPWR DGND
+    1 2 3 4
+    10 11 12 13
+    8
+    DLY_LS55 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS55 ugate (tplhTY=12ns tplhMX=20ns tphlTY=12.5ns tphlMX=20ns)

.ENDS K155LR4
*
*
* ----------------------------------------------------------- K155LD1 ------
*  Dual 4-Input Expanders
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-245 to 3-248
*  bss    2/16/94
*  This gate is used in conjunction with an expanded gate
*
.SUBCKT K155LD1 1 2 3 13 11 12
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 and(4) DPWR DGND
+    1 2 3 13
+    11
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+    11 12
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.ENDS K155LD1
*
*
* ----------------------------------------------------------- KR531LR9 ------
*  4-2-3-2 Input And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-211 to 2-214
*  bss    2/16/94
*
.SUBCKT KR531LR9 1 11 12 13 2 3 4 5 6 9 10 8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(4,4) DPWR DGND
+    1 11 12 13
+    2 3 $D_HI $D_HI
+    4 5 6 $D_HI
+    9 10 $D_HI $D_HI
+    8
+    DLY_S64 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_S64 ugate (tplhTY=3.5ns tplhMX=5.5ns tphlTY=3.5ns tphlMX=5.5ns)

.ENDS KR531LR9
*
*
* ----------------------------------------------------------- K155TV1 ------
*  And Gated J-K Master-Slave Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-225 to 2-227
*  bss    2/22/94
*
.SUBCKT K155TV1 13 2 12 3 4 5 9 10 11 8 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 SRFF(1) DPWR DGND
+     13 2 12 MJ MK SJ SK
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 SRFF(1) DPWR DGND
+     13 2 CLKBAR SJ SK Q_O QBAR_O
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(9,3) DPWR DGND
+     12 3 4 5 9 10 11 Q_O QBAR_O
+     MJ MK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   LOGIC:
+     CLKBAR={~12}
+     j={(3 & 4 & 5)}
+     k={(9 & 10 & 11)}
+     jbar={~j}
+     kbar={~k}
+     MJ={(j & k & QBAR_O) | (j & kbar)}
+     MK={(j & k & Q_O) | (jbar & k)}

U4DLY PINDLY(2,0,0) DPWR DGND
+     Q_O QBAR_O
+     8 6
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   PINDLY:
+     8={
+        CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}
+     6={
+         CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U5CON CONSTRAINT(3) DPWR DGND
+     12 13 2
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=12
+     MIN_HI=20ns
+     MIN_LO=47ns
+
+  WIDTH:
+     NODE=13
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=2
+     MIN_LO=25ns

.ENDS K155TV1
*
*
* ----------------------------------------------------------- K155TM2 ------
*  Dual D-Type Positive Edge Triggered Flip-Flops With  Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-235 to 2-240
*  bss    2/23/94
*
.SUBCKT K155TM2 4 1 3 2 5 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(1) DPWR DGND
+     4 1 3 2 5 6
+     DLY_74 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_74 ueff(tppcqlhMX=25ns tppcqhlMX=40ns twpclMN=30ns
+                 tpclkqlhTY=14ns tpclkqlhMX=25ns tpclkqhlTY=20ns
+                 tpclkqhlMX=40ns twclkhMN=30ns twclklMN=37ns
+                 tsudclkMN=20ns thdclkMN=5ns)

.ENDS K155TM2
*
*
* ----------------------------------------------------------- K155IM3 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-257 to 2-261
*  bss    2/25/94
*
.SUBCKT K155IM3 13 10 8 3 1 11 7 4 16 9 6 2 15 14
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     13 10 8 3 1 11 7 4 16
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~13}
+     nor1 = {~(10 | 11)}
+     nand1 = {~(10 & 11)}
+     nor2 = {~(8 | 7)}
+     nand2 = {~(8 & 7)}
+     nor3 = {~(3 | 4)}
+     nand3 = {~(3 & 4)}
+     nor4 = {~(1 | 16)}
+     nand4 = {~(1 & 16)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ 13}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     13 10 8 3 1 11 7 4 16
+     9 6 2 15 14
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(10,0) | CHANGED(8,0) | CHANGED(3,0) | CHANGED(1,0) |
+                  CHANGED(11,0) | CHANGED(7,0) | CHANGED(4,0) | CHANGED(16,0)}
+     CARRY = {CHANGED(13,0)}
+
+  PINDLY:
+     9 6 2 15 = {
+        CASE(
+           CARRY & TRN_LH, DELAY(-1,16ns,24ns),
+           DATA & TRN_LH, DELAY(-1,15ns,24ns),
+           TRN_HL, DELAY(-1,15ns,24ns),
+           DELAY(-1,17ns,25ns))}
+
+     14 = {
+        CASE(
+           TRN_LH, DELAY(-1,11ns,17ns),
+           CARRY & TRN_HL, DELAY(-1,15ns,22ns),
+           DATA & TRN_HL, DELAY(-1,12ns,17ns),
+           DELAY(-1,16ns,23ns))}

.ENDS K155IM3
*
*
* ----------------------------------------------------------- K555SP1 ------
*  4-Bit Magnitude Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-263 to 2-269
*  bss    2/25/94
*
.SUBCKT K555SP1 10 12 13 15 2 3 4 9 11 14 1 7 6 5
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(11,3) DPWR DGND
+     10 12 13 15 2 3 4 9 11 14 1
+     ALTBO_O AEQBO_O AGTBO_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nand3 = {~(15 & 1)}
+     nand2 = {~(13 & 14)}
+     nand1 = {~(12 & 11)}
+     nand0 = {~(10 & 9)}
+     nor3 = {~((15 & nand3) | (1 & nand3))}
+     nor2 = {~((13 & nand2) | (14 & nand2))}
+     nor1 = {~((12 & nand1) | (11 & nand1))}
+     nor0 = {~((10 & nand0) | (9 & nand0))}
+     AGTBO_O = {~((1 & nand3) | (14 & nand2 & nor3) | (11 & nand1 & nor3 & nor2) |
+          (9 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & 2) |
+          (nor3 & nor2 & nor1 & nor0 & 3))}
+     AEQBO_O = {nor3 & nor2 & 3 & nor1 & nor0}
+     ALTBO_O = {~((15 & nand3) | (13 & nand2 & nor3) | (12 & nand1 & nor3 & nor2) |
+          (10 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & 4) |
+          (nor3 & nor2 & nor1 & nor0 & 3))}

U2DLY PINDLY(3,0,11) DPWR DGND
+     ALTBO_O AEQBO_O AGTBO_O
+     10 12 13 15 2 3 4 9 11 14 1
+     7 6 5
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(10,0) | CHANGED(12,0) | CHANGED(13,0) | CHANGED(15,0) |
+                 CHANGED(9,0) | CHANGED(11,0) | CHANGED(14,0) | CHANGED(1,0)}
+     LTHAN = {CHANGED(2,0)}
+     GTHAN = {CHANGED(4,0)}
+     EQUAL = {CHANGED(3,0)}
+
+  PINDLY:
+     6 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,23ns,35ns),
+           DATA & TRN_HL, DELAY(-1,20ns,30ns),
+           EQUAL & TRN_LH, DELAY(-1,13ns,20ns),
+           EQUAL & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,24ns,36ns))}
+
+     7 5 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,17ns,26ns),
+           DATA & TRN_HL, DELAY(-1,20ns,30ns),
+           (LTHAN | EQUAL | GTHAN) & TRN_LH, DELAY(-1,7ns,11ns),
+           (LTHAN | EQUAL | GTHAN) & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,21ns,31ns))}

.ENDS K555SP1
*
*
* ----------------------------------------------------------- K155LP5 ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-271 to 2-275
*  bss    2/25/94
*
.SUBCKT K155LP5 1 2 3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1 2 1Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1 2
+     3
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     3 = {
+        CASE(
+           CHANGED(1,0) & 2=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(2,0) & 1=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(1,0) & 2=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(2,0) & 1=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(1,0) & 2=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(2,0) & 1=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(1,0) & 2=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(2,0) & 1=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

.ENDS K155LP5
*

*
*
* ----------------------------------------------------------- K155LP5_X4 ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-271 to 2-275
*  bss    2/25/94
*
.SUBCKT K155LP5_X4 1 2 3 4 5 6 7 8 9 10 11 12
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1 2 1Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1 2
+     3
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     3 = {
+        CASE(
+           CHANGED(1,0) & 2=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(2,0) & 1=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(1,0) & 2=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(2,0) & 1=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(1,0) & 2=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(2,0) & 1=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(1,0) & 2=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(2,0) & 1=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

U3 xor DPWR DGND
+     4 5 4Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(1,0,2) DPWR DGND
+     4Y_O
+     4 5
+     6
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     6 = {
+        CASE(
+           CHANGED(4,0) & 5=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(5,0) & 4=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(4,0) & 5=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(5,0) & 4=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(4,0) & 5=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(5,0) & 4=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(4,0) & 5=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(5,0) & 4=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

U5 xor DPWR DGND
+     7 8 7Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(1,0,2) DPWR DGND
+     7Y_O
+     7 8
+     9
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     9 = {
+        CASE(
+           CHANGED(7,0) & 8=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(8,0) & 7=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(7,0) & 8=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(8,0) & 7=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(7,0) & 8=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(8,0) & 7=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(7,0) & 8=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(8,0) & 7=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

U7 xor DPWR DGND
+     10 11 10Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8DLY PINDLY(1,0,2) DPWR DGND
+     10Y_O
+     10 11
+     12
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     12 = {
+        CASE(
+           CHANGED(10,0) & 11=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(11,0) & 10=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(10,0) & 11=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(11,0) & 10=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(10,0) & 11=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(11,0) & 10=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(10,0) & 11=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(11,0) & 10=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

.ENDS K155LP5_X4
*

*
* ----------------------------------------------------------- K155IE2 ------
*  Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/25/94
*
.SUBCKT K155IE2 2 3 6 7 14 1 12 9 8 11
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     NAND9 NAND0 14 $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NANDC 1 QDBAR $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NANDC QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     NAND9 NAND0 1 ANDQ QD_O QD_O QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,4) DPWR DGND
+     2 3 6 7 QB_O QC_O
+     NAND9 NAND0 NANDC ANDQ
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     NAND0 = {~(2 & 3)}
+     NAND9 = {~(6 & 7)}
+     NANDC = {NAND0 & NAND9}
+     ANDQ = {QB_O & QC_O}

U6DLY PINDLY(4,0,4) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     14 1 NAND9 NAND0
+     12 9 8 11
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(14,0)}
+     CHB = {CHANGED_HL(1,0)}
+     SETTO9 = {CHANGED_HL(NAND9,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+     SET = {SETTO0 | SETTO9}
+
+  PINDLY:
+     12 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     9 = {
+       CASE(
+         SET & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     8 = {
+       CASE(
+         SET & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     11 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(8) DPWR DGND
+     2 3 6 7 14 1 NAND9 NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=14
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=1
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=14
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=1
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=2
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=3
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=6
+     MIN_HI=15ns
+     WHEN = {NAND0!='0}
+
+  WIDTH:
+     NODE=7
+     MIN_HI=15ns
+     WHEN = {NAND0!='0}
+
+  SETUP_HOLD:
+  CLOCK HL = 14
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = 1
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = 14
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = 1
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS K155IE2
*
*
* ----------------------------------------------------------- K155IE4 ------
*  Divide By Twelve Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/28/94
*
.SUBCKT K155IE4 6 7 14 1 12 11 9 8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 14 $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 1 QCBAR $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 1 QB_O $D_HI QC_O QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     6 7 NAND0
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     14 1 NAND0
+     12 11 9 8
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(14,0)}
+     CHB = {CHANGED_HL(1,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     12 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     11 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     9 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     8 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     6 7 14 1 NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=14
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=1
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=14
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=1
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=6
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=7
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = 14
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - &R0 R0 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = 1
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - &R0 R0 SETUP < 25ns"

.ENDS K155IE4
*
*
* ----------------------------------------------------------- K555IE5 ------
*  Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/28/94
*
.SUBCKT K555IE5 2 3 14 1 12 9 8 11
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 14 $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 1 $D_HI $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     2 3 NAND0
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     14 1 NAND0
+     12 9 8 11
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(14,0)}
+     CHB = {CHANGED_HL(1,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     12 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     9 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     8 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     11 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,34ns,51ns),
+         CHB & TRN_HL, DELAY(-1,34ns,51ns),
+         CHA & TRN_LH, DELAY(-1,46ns,70ns),
+         CHA & TRN_HL, DELAY(-1,46ns,70ns),
+         DELAY(-1,47ns,71ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     2 3 14 1 NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=14
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=1
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=14
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=1
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=2
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=3
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = 14
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = 1
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS K555IE5
*
*
* ----------------------------------------------------------- K155IR1 ------
*  4-Bit Parallel-Access Shift Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-297 to 2-303
*  bss    2/28/94
*
.SUBCKT K155IR1 6 9 8 1 2 3 4 5 13 12 11 10
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(4) DPWR DGND
+     $D_HI $D_HI CLKLR JA JB JC JD KA KB KC KD
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(12,9) DPWR DGND
+     6 1 9 8 2 3 4 5 QA_O QB_O QC_O QD_O
+     CLKLR JA JB JC JD KA KB KC KD
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     modebar = {~6}
+     CLKLR = {(9 & modebar) | (8 & 6)}
+     JA = {((1 & modebar) | (2 & 6))}
+     JB = {((QA_O & modebar) | (3 & 6))}
+     JC = {((QB_O & modebar) | (4 & 6))}
+     JD = {((QC_O & modebar) | (5 & 6))}
+     KA = {~JA}
+     KB = {~JB}
+     KC = {~JC}
+     KD = {~JD}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     13 12 11 10
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     13 12 11 10 = {
+        CASE(
+           TRN_LH, DELAY(-1,18ns,27ns),
+           TRN_HL, DELAY(-1,21ns,32ns),
+           DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(8) DPWR DGND
+     9 8 1 2 3 4 5 6
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=9
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=8
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=9
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=8
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     DATA(1)=1
+     CLOCK HL=9
+     SETUPTIME=20ns
+     HOLDTIME=10ns
+     WHEN = {6!='1}
+
+  SETUP_HOLD:
+     DATA(4)=2 3 4 5
+     CLOCK HL=8
+     SETUPTIME=20ns
+     HOLDTIME=10ns
+     WHEN = {6!='0}
+
+  SETUP_HOLD:
+     DATA(1)=6
+     CLOCK HL=9
+     SETUPTIME_LO=20ns
+     MESSAGE="CLOCK ENABLE > 20ns"
+
+  SETUP_HOLD:
+     DATA(1)=6
+     CLOCK LH=9
+     SETUPTIME_HI=20ns
+     MESSAGE="CLOCK INHIBIT > 20ns"
+
+  SETUP_HOLD:
+     DATA(1)=6
+     CLOCK HL=8
+     SETUPTIME_HI=20ns
+     MESSAGE="CLOCK ENABLE > 20ns"
+
+  SETUP_HOLD:
+     DATA(1)=6
+     CLOCK LH=8
+     SETUPTIME_LO=20ns
+     MESSAGE="CLOCK INHIBIT > 20ns"

.ENDS K155IR1
*
*
* ----------------------------------------------------------- K155TV15 ------
*  Dual J-K Positive Edge-Triggered Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-325 to 2-329
*  bss    3/7/94
*
.SUBCKT K155TV15 5 1 4 2 3 6 7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     4 3 1CLKBAR 1K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     5 1 1CLKBAR 2 1K 1Q_O 1QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(2,0,3) DPWR DGND
+     1Q_O 1QBAR_O
+     5 1 4
+     6 7
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PRE = {CHANGED_HL(5,0)}
+     CLR = {CHANGED_HL(1,0)}
+     CLOCK = {CHANGED_LH(4,0)}
+
+  PINDLY:
+     6 7 = {
+       CASE(
+          CLOCK & TRN_LH, DELAY(-1,10ns,16ns),
+          (PRE | CLR) & TRN_LH, DELAY(-1,10ns,15ns),
+          PRE & TRN_HL, DELAY(-1,23ns,35ns),
+          CLOCK & TRN_HL, DELAY(-1,18ns,28ns),
+          CLR & TRN_HL, DELAY(-1,17ns,25ns),
+          DELAY(-1,24ns,36ns))}

U4CON CONSTRAINT(5) DPWR DGND
+     5 1 4 2 3
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=4
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=5
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=4
+     DATA(2)=2 3
+     SETUPTIME=10ns
+     HOLDTIME=6ns

.ENDS K155TV15
*
*
* ----------------------------------------------------------- K555ID7 ------
*  3-Line To 8-Line Decoder/Demultiplexer
*
*  The TTL Logic Data Book, 1988, TI Pages 2-425 to 2-430
*  bss    3/16/94
*
.SUBCKT K555ID7 1 2 3 6 4 5 15 14 13 12 11 10 9 7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(6,8) DPWR DGND
+     1 2 3 6 4 5
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~1}
+     bbar = {~2}
+     cbar = {~3}
+     enable = {(~4) & (~5) & 6}
+     Y0_O = {~(abar & bbar & cbar & enable)}
+     Y1_O = {~(1 & bbar & cbar & enable)}
+     Y2_O = {~(abar & 2 & cbar & enable)}
+     Y3_O = {~(1 & 2 & cbar & enable)}
+     Y4_O = {~(abar & bbar & 3 & enable)}
+     Y5_O = {~(1 & bbar & 3 & enable)}
+     Y6_O = {~(abar & 2 & 3 & enable)}
+     Y7_O = {~(1 & 2 & 3 & enable)}

U2DLY PINDLY(8,0,6) DPWR DGND
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O
+     1 2 3 6 4 5
+     15 14 13 12 11 10 9 7
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN = {CHANGED(1,0) | CHANGED(2,0) | CHANGED(2,0)}
+     INA = {CHANGED(1,0)}
+     INB = {CHANGED(2,0)}
+     INC = {CHANGED(3,0)}
+     ENBAR = {CHANGED(4,0) | CHANGED(5,0)}
+     EN = {CHANGED(6,0)}
+
+  PINDLY:
+     15 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          IN & TRN_LH, DELAY(-1,4.5ns,7ns),
+          IN & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,8ns,12ns))}
+
+     14 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          INA & TRN_LH, DELAY(-1,7.5ns,12ns),
+          INA & TRN_HL, DELAY(-1,8ns,12ns),
+          (INB | INC) & TRN_LH, DELAY(-1,4.5ns,7ns),
+          (INB | INC) & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     13 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          INB & TRN_LH, DELAY(-1,7.5ns,12ns),
+          INB & TRN_HL, DELAY(-1,8ns,12ns),
+          (INA | INC) & TRN_LH, DELAY(-1,4.5ns,7ns),
+          (INA | INC) & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     12 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          (INA | INB) & TRN_LH, DELAY(-1,7.5ns,12ns),
+          (INA | INB) & TRN_HL, DELAY(-1,8ns,12ns),
+          INC & TRN_LH, DELAY(-1,4.5ns,7ns),
+          INC & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     11 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          INC & TRN_LH, DELAY(-1,7.5ns,12ns),
+          INC & TRN_HL, DELAY(-1,8ns,12ns),
+          (INB | INA) & TRN_LH, DELAY(-1,4.5ns,7ns),
+          (INB | INA) & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     10 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          (INA | INC) & TRN_LH, DELAY(-1,7.5ns,12ns),
+          (INA | INC) & TRN_HL, DELAY(-1,8ns,12ns),
+          INB & TRN_LH, DELAY(-1,4.5ns,7ns),
+          INB & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     9 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          (INB | INC) & TRN_LH, DELAY(-1,7.5ns,12ns),
+          (INB | INC) & TRN_HL, DELAY(-1,8ns,12ns),
+          INA & TRN_LH, DELAY(-1,4.5ns,7ns),
+          INA & TRN_HL, DELAY(-1,7ns,10.5ns),
+          DELAY(-1,9ns,13ns))}
+
+     7 = {
+       CASE(
+          ENBAR & TRN_LH, DELAY(-1,5ns,8ns),
+          ENBAR & TRN_HL, DELAY(-1,7ns,11ns),
+          EN, DELAY(-1,7ns,11ns),
+          IN & TRN_LH, DELAY(-1,7.5ns,12ns),
+          IN & TRN_HL, DELAY(-1,8ns,12ns),
+          DELAY(-1,9ns,13ns))}
.ENDS K555ID7
* ----------------------------------------------------------- K155ID4 ------
*  Dual 2-Line to 4-Line Decoders/Demultiplexers
*
*  The TTL Logic Data Book, 1988, Texas Instruments
*  jds    2/25/94     Pages 4-475 to 4-482
*
.SUBCKT K155ID4   1 15 2 14 3 13
+               7 6 5 4 9 10 11 12
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74155 LOGICEXP (6,8) DPWR DGND
+      1 15 2 14 3 13
+      1Y0_O 1Y1_O 1Y2_O 1Y3_O 2Y0_O 2Y1_O 2Y2_O 2Y3_O
+      D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      abar = {(~3)}
+      bbar = {(~13)}
+      i1 = { (~(2 | ~1)) }
+      i2 = { (~(14 | 15)) }
+      1Y0_O = { (~(abar & bbar & i1)) }
+      1Y1_O = { (~(3 & bbar & i1)) }
+      1Y2_O = { (~(abar & 13 & i1)) }
+      1Y3_O = { (~(3 & 13 & i1)) }
+      2Y0_O = { (~(abar & bbar & i2)) }
+      2Y1_O = { (~(3 & bbar & i2)) }
+      2Y2_O = { (~(abar & 13 & i2)) }
+      2Y3_O = { (~(3 & 13 & i2)) }

Udly PINDLY (8,0,6) DPWR DGND
+      1Y0_O 1Y1_O 1Y2_O 1Y3_O 2Y0_O 2Y1_O 2Y2_O 2Y3_O
+      1 15 2 14 3 13
+      7 6 5 4 9 10 11 12
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+      STROBE1= { CHANGED(2,0) }
+      STROBE2= { CHANGED(14,0) }
+      TWOCBAR= { CHANGED(15,0) }
+      DATAA= { CHANGED(3,0) }
+      DATAB={ CHANGED(13,0) }
+      ONEC= { CHANGED(1,0) }
+
+    PINDLY:
+      7 = {
+            CASE(
+                 (DATAA | DATAB | STROBE1) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAA | DATAB | STROBE1) & TRN_HL, DELAY(-1,18ns,27ns),
+                 ONEC  & TRN_LH, DELAY(-1,16ns,24ns),
+                 ONEC & TRN_HL, DELAY(-1,20ns,30ns),
+                 DELAY(-1,21ns,31ns)
+                )
+            }
+      6  = {
+            CASE(
+                 DATAA & TRN_LH, DELAY(-1,21ns,32ns),
+                 DATAA & TRN_HL, DELAY(-1,21ns,32ns),
+                 (DATAB | STROBE1) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAB | STROBE1) & TRN_HL, DELAY(-1,18ns,27ns),
+                 ONEC & TRN_LH, DELAY(-1,16ns,24ns),
+                 ONEC & TRN_HL, DELAY(-1,20ns,30ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }
+      5  = {
+            CASE(
+                 DATAB & TRN_LH, DELAY(-1,21ns,32ns),
+                 DATAB & TRN_HL, DELAY(-1,21ns,32ns),
+                 (DATAA | STROBE1) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAA | STROBE1) & TRN_HL, DELAY(-1,18ns,27ns),
+                 ONEC & TRN_LH, DELAY(-1,16ns,24ns),
+                 ONEC & TRN_HL, DELAY(-1,20ns,30ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }
+      4 = {
+            CASE(
+                 (DATAA | DATAB) & TRN_LH, DELAY(-1,21ns,32ns),
+                 (DATAA | DATAB) & TRN_HL, DELAY(-1,21ns,32ns),
+                 STROBE1 & TRN_LH, DELAY(-1,13ns,20ns),
+                 STROBE1 & TRN_HL, DELAY(-1,18ns,27ns),
+                 ONEC & TRN_LH, DELAY(-1,16ns,24ns),
+                 ONEC & TRN_HL, DELAY(-1,20ns,30ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }
+      9 = {
+            CASE(
+                 (DATAA | DATAB | STROBE2 | TWOCBAR) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAA | DATAB | STROBE2 | TWOCBAR) & TRN_HL, DELAY(-1,18ns,27ns),
+                 DELAY(-1,19ns,28ns)
+                )
+            }
+      10  = {
+            CASE(
+                 DATAA & TRN_LH, DELAY(-1,21ns,32ns),
+                 DATAA & TRN_HL, DELAY(-1,21ns,32ns),
+                 (DATAB | STROBE2 | TWOCBAR) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAB | STROBE2 | TWOCBAR) & TRN_HL, DELAY(-1,18ns,27ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }
+      11  = {
+            CASE(
+                 DATAB & TRN_LH, DELAY(-1,21ns,32ns),
+                 DATAB & TRN_HL, DELAY(-1,21ns,32ns),
+                 (DATAA | STROBE2 | TWOCBAR) & TRN_LH, DELAY(-1,13ns,20ns),
+                 (DATAA | STROBE2 | TWOCBAR) & TRN_HL, DELAY(-1,18ns,27ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }
+      12 = {
+            CASE(
+                 (DATAA | DATAB) & TRN_LH, DELAY(-1,21ns,32ns),
+                 (DATAA | DATAB) & TRN_HL, DELAY(-1,21ns,32ns),
+                 STROBE2 | TWOCBAR & TRN_LH, DELAY(-1,13ns,20ns),
+                 STROBE2 & TWOCBAR & TRN_HL, DELAY(-1,18ns,27ns),
+                 DELAY(-1,22ns,33ns)
+                )
+            }

.ENDS K155ID4
*
*
* ----------------------------------------------------------- K155KP2 ------
*  4 Line to 1 Line Multiplexer
*
*  The TTL Logic Data Book, 1988, TI Pages 2-465 to 2-470
*  jds    2/25/94
*
.SUBCKT K155KP2  6 5 4 3 10 11 12 13 14 2 1 15 7 9
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74153 LOGICEXP (12,2) DPWR DGND
+      6 5 4 3 10 11 12 13 14 2 1 15 1Y_O 2Y_O
+      D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      1g = {(~1)}
+      2g = {(~15)}
+      abar = {(~14)}
+      bbar = {(~2)}
+      a0 = {(6 & abar & bbar & 1g)}
+      a1 = {(5 & 14 & bbar & 1g)}
+      a2 = {(4 & abar & 2 & 1g)}
+      a3 = {(3 & 14 & 2 & 1g)}
+      b0 = {(10 & abar & bbar & 2g)}
+      b1 = {(11 & 14 & bbar & 2g)}
+      b2 = {(12 & abar & 2 & 2g)}
+      b3 = {(13 & 14 & 2 & 2g)}
+
+      1Y_O = { ( a0 | a1 | a2 | a3) }
+      2Y_O = { ( b0 | b1 | b2 | b3) }

Udly PINDLY (2,0,12) DPWR DGND
+    1Y_O 2Y_O
+    6 5 4 3 10 11 12 13
+    14 2 1 15
+    7 9
+    IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+       SELECT= { CHANGED(14,0) | CHANGED(2,0) }
+       STROBE1= { CHANGED(1,0) }
+       STROBE2= { CHANGED(15,0) }
+       DATA1={ CHANGED(6,0) | CHANGED(5,0) | CHANGED(4,0) | CHANGED(3,0) }
+       DATA2={ CHANGED(10,0) | CHANGED(11,0) | CHANGED(12,0) | CHANGED(13,0) }
+
+    PINDLY:
+       7 = {
+            CASE(
+                 SELECT & TRN_LH, DELAY(-1,22ns,34ns),
+                 SELECT & TRN_HL, DELAY(-1,22ns,34ns),
+                 STROBE1 & TRN_LH, DELAY(-1,19ns,30ns),
+                 STROBE1 & TRN_HL, DELAY(-1,15ns,23ns),
+                 DATA1 & TRN_LH, DELAY(-1,12ns,18ns),
+                 DATA1 & TRN_HL, DELAY(-1,15ns,23ns),
+                 DELAY(-1,23ns,35ns)
+                )
+            }
+       9 = {
+            CASE(
+                 SELECT & TRN_LH, DELAY(-1,22ns,34ns),
+                 SELECT & TRN_HL, DELAY(-1,22ns,34ns),
+                 STROBE2 & TRN_LH, DELAY(-1,19ns,30ns),
+                 STROBE2 & TRN_HL, DELAY(-1,15ns,23ns),
+                 DATA2 & TRN_LH, DELAY(-1,12ns,18ns),
+                 DATA2 & TRN_HL, DELAY(-1,15ns,23ns),
+                 DELAY(-1,23ns,35ns)
+                )
+            }

.ENDS K155KP2

*
*
* ----------------------------------------------------------- 74S151 ------
*  Data Selectors/Multiplexers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-457 to 2-464
*  jds    2/16/94
*
.SUBCKT K155KP7  4 3 2 1 15 14 13 12 11 10 9 7 5 6
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74S151 LOGICEXP (12,2) DPWR DGND
+        4 3 2 1 15 14 13 12 11 10 9 7 Y_O W_O
+        D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      g = {(~7)}
+      abar = {(~11)}
+      bbar = {(~10)}
+      cbar = {(~9)}
+      a0 = {(4 & abar & bbar & cbar & g)}
+      a1 = {(3 & 11 & bbar & cbar & g)}
+      a2 = {(2 & abar & 10 & cbar & g)}
+      a3 = {(1 & 11 & 10 & cbar & g)}
+      a4 = {(15 & abar & bbar & 9 & g)}
+      a5 = {(14 & 11 & bbar & 9 & g)}
+      a6 = {(13 & abar & 10 & 9 & g)}
+      a7 = {(12 & 11 & 10 & 9 & g)}
+
+      W_O = { ~( a0 | a1 | a2 | a3 | a4 | a5 | a6 | a7 ) }
+      Y_O = { (~W_O) }

Udly PINDLY (2,0,12) DPWR DGND
+    W_O Y_O
+    4 3 2 1 15 14 13 12
+    11 10 9 7
+    6 5
+    IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+       SELECT= { CHANGED(11,0) | CHANGED(10,0) | CHANGED(9,0) }
+       STROBE= { CHANGED(7,0) }
+       DATA={ CHANGED(4,0) | CHANGED(3,0) | CHANGED(2,0) | CHANGED(1,0) |
+              CHANGED(15,0) | CHANGED(14,0) | CHANGED(13,0) | CHANGED(12,0) }
+
+    PINDLY:
+       6 = {
+            CASE(
+                 SELECT & TRN_LH, DELAY(-1,10ns,15ns),
+                 SELECT & TRN_HL, DELAY(-1,9ns,13.5ns),
+                 STROBE & TRN_LH, DELAY(-1,9ns,13ns),
+                 STROBE & TRN_HL, DELAY(-1,8.5ns,12ns),
+                 DATA & TRN_LH, DELAY(-1,4.5ns,7ns),
+                 DATA & TRN_HL, DELAY(-1,4.5ns,7ns),
+                 DELAY(-1,11ns,16ns)
+                )
+            }
+       5 = {
+            CASE(
+                 SELECT & TRN_LH, DELAY(-1,12ns,18ns),
+                 SELECT & TRN_HL, DELAY(-1,12ns,18ns),
+                 STROBE & TRN_LH, DELAY(-1,11ns,16.5ns),
+                 STROBE & TRN_HL, DELAY(-1,12ns,18ns),
+                 DATA & TRN_LH, DELAY(-1,8ns,12ns),
+                 DATA & TRN_HL, DELAY(-1,8ns,12ns),
+                 DELAY(-1,13ns,19ns)
+                )
+            }

.ENDS K155KP7
*
*
* ----------------------------------------------------------- KR531KP11 ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT KR531KP11  1 15 2 3 5 6 11 10 14 13 4 7 9 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     2 3 5 6 11 10 14 13 1
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~1}
+     1Y_O = {(2 & a/bbar) | (3 & 1)}
+     2Y_O = {(5 & a/bbar) | (6 & 1)}
+     3Y_O = {(11 & a/bbar) | (10 & 1)}
+     4Y_O = {(14 & a/bbar) | (13 & 1)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     15
+     2 3 5 6 11 10 14 13 1
+     4 7 9 12
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(2,0) | CHANGED(3,0) | CHANGED(5,0) |
+         CHANGED(6,0) | CHANGED(11,0) | CHANGED(10,0) |
+         CHANGED(14,0) | CHANGED(13,0)}
+     SELECT = {CHANGED(1,0)}
+
+  TRISTATE:
+     ENABLE LO=15
+     4 7 9 12 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,8.5ns,15ns),
+         SELECT & TRN_HL, DELAY(-1,8.5ns,15ns),
+         DATA & TRN_LH, DELAY(-1,5ns,7.5ns),
+         DATA & TRN_HL, DELAY(-1,4.5ns,6.5ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DELAY(-1,15ns,22ns))}

.ENDS KR531KP11
*
*
* ----------------------------------------------------------- K155LE3 ------
*  Dual 4-Input Nor Gates With Strobe
*
*  The TTL Logic Data Book, 1988, TI Pages 2-111 to 2-113
*  bss    2/14/94
*
.SUBCKT K155LE3  5 1 2 3 4 6
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(2,4) DPWR DGND
+     1 5
+     2 5
+     3 5
+     4 5
+     6
+     DLY_25 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_25 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  K155LE3
*
*
* ----------------------------------------------------------- K155ID3 ------
*  4-Line to 16-Line Decoders/Demultiplexers
*
*  The TTL Logic Data Book, 1988, Texas Instruments
*  jds    2/25/94     Pages 2-471 to 2-474
*
.SUBCKT K155ID3  1 2 3 4 5 6 7 8 9 10
+              11 13 14 15 16 17
+              18 19 23 22 21 20
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74154 LOGICEXP (6,16) DPWR DGND
+      18 19 23 22 21 20
+      O_0o O_1o O_2o O_3o O_4o O_5o O_6o O_7o O_8o O_9o
+      O_10o O_11o O_12o O_13o O_14o O_15o
+      D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      abar = { (~23) }
+      bbar = { (~22) }
+      cbar = { (~21) }
+      dbar = { (~20) }
+      g = { (~(18 | 19)) }
+
+      O_0o = {~(abar & bbar & cbar & dbar & g)}
+      O_1o = {~(23 & bbar & cbar & dbar & g)}
+      O_2o = {~(abar & 22 & cbar & dbar & g)}
+      O_3o = {~(23 & 22 & cbar & dbar & g)}
+      O_4o = {~(abar & bbar & 21 & dbar & g)}
+      O_5o = {~(23 & bbar & 21 & dbar & g)}
+      O_6o = {~(abar & 22 & 21 & dbar & g)}
+      O_7o = {~(23 & 22 & 21 & dbar & g)}
+      O_8o = {~(abar & bbar & cbar & 20 & g)}
+      O_9o = {~(23 & bbar & cbar & 20 & g)}
+      O_10o = {~(abar & 22 & cbar & 20 & g)}
+      O_11o = {~(23 & 22 & cbar & 20 & g)}
+      O_12o = {~(abar & bbar & 21 & 20 & g)}
+      O_13o = {~(23 & bbar & 21 & 20 & g)}
+      O_14o = {~(abar & 22 & 21 & 20 & g)}
+      O_15o = {~(23 & 22 & 21 & 20 & g)}

Udly PINDLY (16,0,6) DPWR DGND
+      O_0o O_1o O_2o O_3o O_4o O_5o O_6o O_7o O_8o O_9o
+      O_10o O_11o O_12o O_13o O_14o O_15o
+      18 19 23 22 21 20
+      1 2 3 4 5 6 7 8 9 10
+      11 13 14 15 16 17
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+       STROBE= { CHANGED(18,0) | CHANGED(19,0) }
+       DATA={ CHANGED(23,0) | CHANGED(22,0) | CHANGED(21,0) | CHANGED(20,0) }
+
+    PINDLY:
+      1 2 3 4 5 6 7 8 9 10
+      11 13 14 15 16 17  = {
+            CASE(
+                 DATA & TRN_LH, DELAY(-1,24ns,36ns),
+                 DATA & TRN_HL, DELAY(-1,22ns,33ns),
+                 STROBE & TRN_LH, DELAY(-1,20ns,30ns),
+                 STROBE & TRN_HL, DELAY(-1,18ns,27ns),
+                 DELAY(-1,25ns,37ns)
+                )
+            }

.ENDS K155ID3
*
*
* ----------------------------------------------------------- K555KP14 ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT K555KP14  1 15 2 3 5 6 11 10 14 13 4 7 9 12
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     2 3 5 6 11 10 14 13 1
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~1}
+     1Y_O = {~((2 & a/bbar) | (3 & 1))}
+     2Y_O = {~((5 & a/bbar) | (6 & 1))}
+     3Y_O = {~((11 & a/bbar) | (10 & 1))}
+     4Y_O = {~((14 & a/bbar) | (13 & 1))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     15
+     2 3 5 6 11 10 14 13 1
+     4 7 9 12
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(2,0) | CHANGED(3,0) | CHANGED(5,0) |
+         CHANGED(6,0) | CHANGED(11,0) | CHANGED(10,0) |
+         CHANGED(14,0) | CHANGED(13,0)}
+     SELECT = {CHANGED(1,0)}
+
+  TRISTATE:
+     ENABLE LO=15
+     4 7 9 12 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,8ns,12ns),
+         SELECT & TRN_HL, DELAY(-1,7.5ns,12ns),
+         DATA, DELAY(-1,4ns,6ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DELAY(-1,15ns,20.5ns))}

.ENDS K555KP14
*
*
* ----------------------------------------------------------- K555KP12 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-723 to 2-727
*  bss    3/25/94
*
.SUBCKT K555KP12  14 2 1 6 5 4 3 15 10 11 12 13 7 9
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     14 2 1 6 5 4 3 15 10 11 12 13
+     1Y_O 2Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~14}
+     bbar = {~2}
+     1g = {~1}
+     2g = {~15}
+     a1o = {6 & abar & bbar & 1g}
+     a2o = {5 & 14 & bbar & 1g}
+     a3o = {4 & abar & 2 & 1g}
+     a4o = {3 & 14 & 2 & 1g}
+     b1o = {10 & abar & bbar & 2g}
+     b2o = {11 & 14 & bbar & 2g}
+     b3o = {12 & abar & 2 & 2g}
+     b4o = {13 & 14 & 2 & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1 15
+     14 2 6 5 4 3 10 11 12 13
+     7 9
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(14,0) | CHANGED(2,0)}
+     DATAA = {CHANGED(6,0) | CHANGED(5,0) | CHANGED(4,0) |
+            CHANGED(3,0)}
+     DATAB = {CHANGED(10,0) | CHANGED(11,0) | CHANGED(12,0) |
+            CHANGED(13,0)}
+
+  TRISTATE:
+     ENABLE LO=1
+     7 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,11.5ns,18ns),
+         SELECT & TRN_HL, DELAY(-1,12ns,18ns),
+         DATAA, DELAY(-1,6ns,9ns),
+         TRN_ZH, DELAY(-1,11ns,16.5ns),
+         TRN_ZL, DELAY(-1,12ns,18ns),
+         TRN_HZ, DELAY(-1,6.5ns,9.5ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,13ns,19ns))}
+
+  TRISTATE:
+     ENABLE LO=15
+     9 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,11.5ns,18ns),
+         SELECT & TRN_HL, DELAY(-1,12ns,18ns),
+         DATAB, DELAY(-1,6ns,9ns),
+         TRN_ZH, DELAY(-1,11ns,16.5ns),
+         TRN_ZL, DELAY(-1,12ns,18ns),
+         TRN_HZ, DELAY(-1,6.5ns,9.5ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,13ns,19ns))}

.ENDS K555KP12
*
*
* ----------------------------------------------------------- KR531AP3 ------
*  Octal Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-692 to 2-699
*  jds    5/24/94
*
.SUBCKT KR531AP3 1 2 4 6 8 18 16 14 12
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

uf0 inv DPWR DGND
+     1 GEN
+     D0_GATE IO_S_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

uf1 inv3a(4) DPWR DGND
+     2 4 6 8
+     GEN
+     18 16 14 12
+     DLY_MOD IO_S_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_MOD utgate (TPLHMN=-1 TPLHTY=4.5ns TPLHMX=7ns 
+                      TPHLMN=-1 TPHLTY=4.5ns TPHLMX=7ns
+                      TPZLMN=-1 TPZLTY=10ns  TPZLMX=15ns
+                      TPZHMN=-1 TPZHTY=6.5ns TPZHMX=10ns
+                      TPLZMN=-1 TPLZTY=10ns  TPLZMX=15ns
+                      TPHZMN=-1 TPHZTY=6ns   TPHZMX=9ns)

.ENDS KR531AP3
*
*
* ----------------------------------------------------------- K555IM6 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-781 to 2-785
*  bss    4/4/94
*
.SUBCKT K555IM6 7 5 3 14 12 6 2 15 11 4 1 13 10 9
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     7 5 3 14 12 6 2 15 11
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~7}
+     nor1 = {~(5 | 6)}
+     nand1 = {~(5 & 6)}
+     nor2 = {~(3 | 2)}
+     nand2 = {~(3 & 2)}
+     nor3 = {~(14 | 15)}
+     nand3 = {~(14 & 15)}
+     nor4 = {~(12 | 11)}
+     nand4 = {~(12 & 11)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ 7}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     7 5 3 14 12 6 2 15 11
+     4 1 13 10 9
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(5,0) | CHANGED(3,0) | CHANGED(14,0) | CHANGED(12,0) |
+                  CHANGED(6,0) | CHANGED(2,0) | CHANGED(15,0) | CHANGED(11,0)}
+     CARRY = {CHANGED(7,0)}
+
+  PINDLY:
+     4 1 13 10 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,16ns,24ns),
+           DATA & TRN_HL, DELAY(-1,16ns,24ns),
+           CARRY & TRN_LH, DELAY(-1,14ns,21ns),
+           CARRY & TRN_HL, DELAY(-1,12ns,21ns),
+           DELAY(-1,17ns,25ns))}
+
+     9 = {
+        CASE(
+           TRN_LH, DELAY(-1,9ns,14ns),
+           TRN_HL, DELAY(-1,11ns,16ns),
+           DELAY(-1,12ns,17ns))}

.ENDS K555IM6
*
*
* ----------------------------------------------------------- KR531IK2 ------
*  Arithmetic Logic Unit
*
*  The TTL Logic Data Book, 1988, TI Pages 2-899 to 2-906
*  bss    4/19/94
*
.SUBCKT KR531IK2 5 6 7 19 3 1 23 21 4 2 22 20 17 18 10 11 13 14
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     5 6 7 19 3 1 23 21 4 2 22 20
+     GBAR_O PBAR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~3}
+     a1bar = {~1}
+     a2bar = {~23}
+     a3bar = {~21}
+     b0bar = {~4}
+     b1bar = {~2}
+     b2bar = {~22}
+     b3bar = {~20}
+     s0bar = {~5}
+     s1bar = {~6}
+     s2bar = {~7}
+
+     self1 = {~((5 & s1bar & s2bar) | (s0bar & 6 & s2bar) | (5 & 6 & 7))}
+     self2 = {~((5 & s1bar) | (5 & 7) | (s0bar & 6))}
+     self3 = {~((5 & 6) | (s1bar & 7))}
+     self4 = {~(5 & s1bar & s2bar)}
+     self5 = {~(5 & 6 & s2bar)}
+     self6 = {~(s0bar & 6 & s2bar)}
+     selout = {((5 & s2bar) | (6 & s2bar))}
+
+     out0a = {~((self3 & 3 & b0bar) | (self2 & 3 & 4) | (self3 & a0bar & 4) |
+               (self1 & a0bar & b0bar))}
+     out0b = {~((self6 & 3 & b0bar) | (self5 & 3 & 4) | (self4 & a0bar & 4) |
+               (a0bar & b0bar))}
+     out1a = {~((self3 & 1 & b1bar) | (self2 & 1 & 2) | (self3 & a1bar & 2) |
+               (self1 & a1bar & b1bar))}
+     out1b = {~((self6 & 1 & b1bar) | (self5 & 1 & 2) | (self4 & a1bar & 2) |
+               (a1bar & b1bar))}
+     out2a = {~((self3 & 23 & b2bar) | (self2 & 23 & 22) | (self3 & a2bar & 22) |
+               (self1 & a2bar & b2bar))}
+     out2b = {~((self6 & 23 & b2bar) | (self5 & 23 & 22) | (self4 & a2bar & 22) |
+               (a2bar & b2bar))}
+     out3a = {~((self3 & 21 & b3bar) | (self2 & 21 & 20) | (self3 & a3bar & 20) |
+               (self1 & a3bar & b3bar))}
+     out3b = {~((self6 & 21 & b3bar) | (self5 & 21 & 20) | (self4 & a3bar & 20) |
+               (a3bar & b3bar))}
+
+     F0_O = {~((~(selout & 19)) ^ out0a)}
+     F1_O = {~((~((selout & 19 & out0a) | (selout & out0b))) ^ out1a)}
+     F2_O = {~((~((selout & 19 & out0a & out1a) | (selout & out1a & out0b) | (selout & out1b))) ^ 
+                out2a)}
+     F3_O = {~((~((selout & 19 & out0a & out1a & out2a) | (selout & out1a & out2a & out0b) |
+                (selout & out2a & out1b) | (selout & out2b))) ^ out3a)}
+     PBAR_O = {~(out0a & out1a & out2a & out3a)}
+     GBAR_O = {~((out1a & out2a & out3a & out0b) | (out2a & out3a & out1b) | (out3a & out2b) |
+                 out3b)}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O PBAR_O GBAR_O
+     19 3 1 23 21 4 2 22 20 5 6 7
+     10 11 13 14 18 17
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(3,0) | CHANGED(1,0) | CHANGED(23,0) | CHANGED(21,0) |
+            CHANGED(4,0) | CHANGED(2,0) | CHANGED(22,0) | CHANGED(20,0)}
+     SELECT = {CHANGED(5,0) | CHANGED(6,0) | CHANGED(7,0)}
+     CARRY = {CHANGED(19,0)}
+
+  PINDLY:
+     10 11 13 14 = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA & TRN_LH, DELAY(-1,18ns,27ns),
+         DATA & TRN_HL, DELAY(-1,16ns,25ns),
+         CARRY, DELAY(-1,10ns,17ns),
+         DELAY(-1,19ns,31ns))}
+
+     18 = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA, DELAY(-1,11ns,18ns),
+         DELAY(-1,19ns,31ns))}
+
+     17 = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA, DELAY(-1,12ns,20ns),
+         DELAY(-1,19ns,31ns))}

.ENDS KR531IK2
*
*
* ----------------------------------------------------------- K155TM7 ------
*  4 Bit Bistable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-241 to 2-245
*  bss    2/24/94
*
.SUBCKT K155TM7 13 2 3 16 1 15 14
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(2) DPWR DGND
+     $D_HI $D_HI 13 2 3 1Q_O 2Q_O 1QBAR_O 2QBAR_O
+     DLY_75 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(4,0,3) DPWR DGND
+     1Q_O 1QBAR_O 2Q_O 2QBAR_O
+     13 2 3
+     16 1 15 14
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA={CHANGED(2,0) | CHANGED(3,0)}
+     CLK = {CHANGED_LH(13,0)}
+
+  PINDLY:
+     16 15 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,16ns,30ns),
+           DATA & TRN_HL, DELAY(-1,14ns,25ns),
+           CLK & TRN_LH, DELAY(-1,16ns,30ns),
+           CLK & TRN_HL, DELAY(-1,7ns,15ns),
+           DELAY(-1,17ns,31ns))}
+
+     1 14 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,24ns,40ns),
+           DATA & TRN_HL, DELAY(-1,7ns,15ns),
+           CLK & TRN_LH, DELAY(-1,16ns,30ns),
+           CLK & TRN_HL, DELAY(-1,7ns,15ns),
+           DELAY(-1,25ns,41ns))}

.model DLY_75 ugff (twghMN=20ns tsudgMN=20ns thdgMN=5ns)

.ENDS K155TM7
*
*
* ----------------------------------------------------------- K155TM8 ------
*  Quadruple D-Type Flip-Flops with Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-581 to 2-586
*  jds    4/29/94
*
.SUBCKT K155TM8 9 1 4 5 12 13 2 7 10 15 3 6 11 14
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0


uf0 dFF(4) DPWR DGND
+ $D_HI 1 9 4 5 12 13
+ 2 7 10 15 3 6 11 14
+ DFF175 IO_STD

.model DFF175 ueff(TPPCQLHMN=-1  TPPCQLHTY=16ns   TPPCQLHMX=25ns
+                  TPPCQHLMN=-1   TPPCQHLTY=23ns   TPPCQHLMX=35ns
+                  TWPCLMN=-1     TWPCLTY=20ns     TWPCLMX=-1
+                  TPCLKQLHMN=-1  TPCLKQLHTY=20ns  TPCLKQLHMX=30ns
+                  TPCLKQHLMN=-1  TPCLKQHLTY=24ns  TPCLKQHLMX=35ns
+                  TWCLKLMN=-1    TWCLKLTY=20ns    TWCLKLMX=-1
+                  TWCLKHMN=-1    TWCLKHTY=20ns    TWCLKHMX=-1
+                  TSUDCLKMN=-1   TSUDCLKTY=20ns   TSUDCLKMX=-1
+                  TSUPCCLKHMN=-1 TSUPCCLKHTY=-1   TSUPCCLKHMX=-1
+                  THDCLKMN=-1    THDCLKTY=-1      THDCLKMX=-1)

.ENDS K155TM8
*
*
* ----------------------------------------------------------- K555IR27 ------
*  Octal D Flip Flop With Clock Enable
*
*  The TTL Logic Data Book, 1988, TI Pages 2-895 to 2-898
*  bss    4/14/94
*
.SUBCKT K555IR27 1 11 3 4 7 8 13 14 17 18 2 5 6 9 12 15 16 19
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLKIN
+     3 4 7 8 13 14 17 18
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     11 CLKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     1 NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 11 CLKIN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     2 5 6 9 12 15 16 19
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     2 5 6 9 12 15 16 19 = {
+       CASE(
+         TRN_LH, DELAY(-1,17ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,28ns))}

U6CON CONSTRAINT(10) DPWR DGND
+     1 11 3 4 7 8 13 14 17 18
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=11
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=11
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=11
+     DATA(1)=1
+     SETUPTIME_HI=10ns
+     SETUPTIME_LO=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=11
+     DATA(8)=3 4 7 8 13 14 17 18
+     SETUPTIME=20ns
+     HOLDTIME=5ns
+     WHEN={1!='1}

.ENDS K555IR27
*
*
* ----------------------------------------------------------- K555IR22 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-883 to 2-890
*  bss    4/13/94
*
.SUBCKT K555IR22 1 11 3 4 7 8 13 14 17 18 2 5 6 9 12 15 16 19
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     11 GATE
+     D0_GATE IO_S_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI GATE
+     3 4 7 8 13 14 17 18
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_S373 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv DPWR DGND
+     1 OC
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     2 5 6 9 12 15 16 19
+     DLY2_S373 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_S373 ugff(tpgqhlTY=7ns tpgqhlMX=14ns
+                                  tpgqlhTY=12ns tpgqlhMX=18ns
+                                  tpdqhlTY=7ns tpdqhlMX=12ns
+                                  tpdqlhTY=7ns tpdqlhMX=12ns
+                                  twghMN=6ns thdgMN=10ns)

.model DLY2_S373 utgate (tplzTY=8ns tplzMX=12ns tphzTY=6ns tphzMX=9ns
+                                  tpzlTY=11ns tpzlMX=18ns tpzhTY=8ns tpzhMX=15ns)

.ENDS K555IR22
*
*
* ----------------------------------------------------------- K155LI2 ------
*  Quad 2-Input And Gates With Open-Collector Outputs   
*
*  The TTL Logic Data Book, 1988, TI Pages 2-47 to 2-51
*  bss    2/4/94
*
.SUBCKT K155LI2  1 2 3
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1 2 3
+     DLY_09 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_09 ugate (tplhTY=21ns tplhMX=32ns tphlTY=16ns tphlMX=24ns)

.ENDS  K155LI2
*
*
* ----------------------------------------------------------- K555LP8 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-387 to 2-391
*  bss    3/11/94
*
.SUBCKT K555LP8 2 1 3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1 1G
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3 DPWR DGND
+     2 1G 3
+     DLY_K555LP8 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_K555LP8 utgate (tplhTY=9ns tplhMX=15ns tphlTY=7ns tphlMX=18ns
+                               tplzMX=20ns tphzMX=20ns
+                               tpzlTY=15ns tpzlMX=25ns tpzhTY=12ns tpzhMX=20ns)

.ENDS K555LP8
*
*
* ----------------------------------------------------------- K155IE7 ------
*  Synchronous 4-Bit Up/Down Binary Counter with Dual Clock and Clear
*
*  The Standard TTL Data Book, 1988, TI Pages 2-633 to 2-644
*  jds    5/13/94
*
.SUBCKT K155IE7 4 5 14 15 1 10 9 12 11 13 3 2 6 7
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74193 LOGICEXP (16,14) DPWR DGND
+      4 5 15 1 10 9 11 14
+      QA_O QB_O QC_O QD_O qabar qbbar qcbar qdbar
+      COBAR_O BOBAR_O ta tb tc td sa sb sc sd ra rb rc rd
+      D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      upbar = {(~5) }
+      load = {(~11)}
+      downbar = {(~4)}
+      clrbar = {(~14)}
+      sa = { ~(15 & load & clrbar) }
+      ra = { ((~(sa & load)) & clrbar) }
+      sb = { ~(1 & load & clrbar) }
+      rb = { ((~(sb & load)) & clrbar) }
+      sc = { ~(10 & load & clrbar) }
+      rc = { ((~(sc & load)) & clrbar) }
+      sd = { ~(9 & load & clrbar) }
+      rd = { ((~(sd & load)) & clrbar) }
+      BOBAR_O = { ~(downbar & qabar & qbbar & qcbar & qdbar) }
+      COBAR_O =  { ~(upbar & QA_O & QB_O & QC_O & QD_O) }
+      ta = { (upbar | downbar) }
+      tb = { (downbar & qabar) | (upbar & QA_O)}
+      tc = { (downbar & qabar & qbbar) | (upbar & QA_O & QB_O)}
+      td = { (downbar & qabar & qbbar & qcbar) | (QA_O & QB_O & QC_O &  upbar)}

uf0 jkFF(1) DPWR DGND
+ sa ra ta $D_HI $D_HI QA_O qabar
+ D0_EFF IO_STD

uf1 jkFF(1) DPWR DGND
+ sb rb tb $D_HI $D_HI QB_O qbbar
+ D0_EFF IO_STD

uf2 jkFF(1) DPWR DGND
+ sc rc tc $D_HI $D_HI QC_O qcbar
+ D0_EFF IO_STD

uf3 jkFF(1) DPWR DGND
+ sd rd td $D_HI $D_HI QD_O qdbar
+ D0_EFF IO_STD

Udly PINDLY (6,0,8) DPWR DGND
+    COBAR_O QA_O QB_O QC_O QD_O BOBAR_O
+    4 5 14 11 15 1 10 9
+    12 3 2 6 7 13
+    IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+     LOAD_DAT = { CHANGED(11,0) }
+     CLKUP  = { CHANGED(5,0) }
+     CLKDOWN  = { CHANGED(4,0) }
+     CLEAR = { CHANGED(14,0) }
+     DATA = { CHANGED(15,0) | CHANGED(1,0) | CHANGED(10,0) | CHANGED(9,0) }
+
+    PINDLY:
+       12 = {
+            CASE(
+                 CLKUP & TRN_LH, DELAY(-1,17ns,26ns),
+                 CLKUP & TRN_HL, DELAY(-1,16ns,24ns),
+                 DELAY(-1,18ns,27ns)
+                )
+            }
+       3 2 6 7 = {
+            CASE(
+                 CLEAR & TRN_HL, DELAY(-1,22ns,35ns),
+                 LOAD_DAT & TRN_LH, DELAY(-1,27ns,40ns),
+                 LOAD_DAT & TRN_HL, DELAY(-1,29ns,40ns),
+                 (CLKUP | CLKDOWN) & TRN_LH, DELAY(-1,25ns,38ns),
+                 (CLKUP | CLKDOWN) & TRN_HL, DELAY(-1,31ns,47ns),
+                 DELAY(-1,30ns,49ns)
+                )
+            }
+       13 = {
+            CASE(
+                 CLKDOWN & TRN_LH, DELAY(-1,16ns,24ns),
+                 CLKDOWN & TRN_HL, DELAY(-1,16ns,24ns),
+                 DELAY(-1,17ns,25ns)
+                )
+            }

Ucnstr CONSTRAINT(8) DPWR DGND
+          14 5 4 11 15 1 10 9
+          IO_STD
+
+      FREQ:
+         NODE = 5
+         MAXFREQ = 20MEG
+      FREQ:
+         NODE = 4
+         MAXFREQ = 20MEG
+      WIDTH:
+         NODE = 5
+         MIN_HI = 20ns
+         MIN_LO = 20ns
+      WIDTH:
+         NODE = 4
+         MIN_HI = 20ns
+         MIN_LO = 20ns
+      WIDTH:
+         NODE = 14
+         MIN_HI = 20ns
+      WIDTH:
+         NODE = 11
+         MIN_LO = 20ns
+      SETUP_HOLD:
+        CLOCK LH = 11
+        DATA(4) = 15 1 10 9
+        SETUPTIME = 20ns
+        WHEN = { 14 != '1 }

.ENDS K155IE7
*
*
* ----------------------------------------------------------- K555LP14 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-387 to 2-391
*  bss    3/11/94
*
.SUBCKT K555LP14 2 1 3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf3 DPWR DGND
+     2 1 3
+     DLY_LP14 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LP14 utgate (tplhTY=8ns tplhMX=13ns tphlTY=12ns tphlMX=18ns
+                               tplzTY=12ns tplzMX=18ns tphzTY=10ns tphzMX=16ns
+                               tpzlTY=16ns tpzlMX=25ns tpzhTY=11ns tpzhMX=18ns)

.ENDS K555LP14
*
*
* ----------------------------------------------------------- KR531LE7 ------
*  Dual 5-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-739 to 2-741
*  bss    3/29/94
*
.SUBCKT KR531LE7  1 2 3 13 12 5
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(5) DPWR DGND
+     1 2 3 13 12
+     5
+     DLY_LE7 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LE7 ugate (tplhTY=4ns tplhMX=5.5ns tphlTY=4ns tphlMX=6ns)

.ENDS KR531LE7
*
*
* ----------------------------------------------------------- K555IE19 ------
*  Dual 4-Bit Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-919 to 2-927
*  bss    4/20/94
*
.SUBCKT K555IE19 1 2 3 4 5 6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1 $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QA_O $D_HI $D_HI 1QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QC_O $D_HI $D_HI 1QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     2 CLEAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     2 1
+     3 4 5 6
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(2,0)}
+     CLOCKA = {CHANGED_HL(1,0)}
+
+  PINDLY:
+     3 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCKA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
*The Propagation Times For 1QB And 1QC Were Interpolated From The Delay Times
*Of 1QA And 1QD
+     4 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,22ns,34ns),
+         CLOCKA & TRN_HL, DELAY(-1,22ns,34ns),
+         DELAY(-1,25ns,40ns))}
+
+     5 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,31ns,47ns),
+         CLOCKA & TRN_HL, DELAY(-1,31ns,47ns),
+         DELAY(-1,32ns,48ns))}
+
+     6 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,40ns,60ns),
+         CLOCKA & TRN_HL, DELAY(-1,40ns,60ns),
+         DELAY(-1,41ns,61ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     1 2
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=2
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1
+     DATA(1)=2
+     SETUPTIME_LO=25ns

.ENDS K555IE19
*
*
* ----------------------------------------------------------- K555IR15 ------
*  4-Bit D-Type Registers with 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-575 to 2-579
*  jds    4/28/94
*
.SUBCKT K555IR15 7 15 14 13 12 11 3 4 5 6 1 2 9 10
+  optional: DPWR=$G_DPWR DGND=$G_DGND
+  params: MNTYMXDLY=0 IO_LEVEL=0

U74LS173A LOGICEXP (13,6) DPWR DGND
+      1 2 14 13 12 11 15 1Q_O 2Q_O 3Q_O 4Q_O 9 10
+      d1 d2 d3 d4 clrbar  en_out
+      D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      clrbar = { ~(15) }
+      enable = { ~(9 | 10) }
+      en_out = { ~( 1 | 2 ) }
+      d1 = { (1Q_O  & (~enable)) | (14 & enable) }
+      d2 = { (2Q_O  & (~enable)) | (13 & enable) }
+      d3 = { (3Q_O  & (~enable)) | (12 & enable) }
+      d4 = { (4Q_O  & (~enable)) | (11 & enable) }

uf0 dFF(4) DPWR DGND
+ $D_HI clrbar 7 d1 d2 d3 d4
+ 1Q_O 2Q_O 3Q_O 4Q_O q1bar q2bar q3bar q4bar
+ D0_EFF IO_LS

Udly PINDLY (4,1,2) DPWR DGND
+    1Q_O 2Q_O 3Q_O 4Q_O
+    en_out
+    7 clrbar
+    3 4 5 6
+    IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+    BOOLEAN:
+     CLOCK = { CHANGED(7,0) }
+     CLEAR = { CHANGED(clrbar,0) }
+
+    TRISTATE:
+      ENABLE HI = en_out
+       3 4 5 6 = {
+            CASE(
+                 CLEAR & TRN_HL, DELAY(-1,26ns,35ns),
+                 CLOCK & TRN_LH, DELAY(-1,17ns,25ns),
+                 CLOCK & TRN_HL, DELAY(-1,22ns,30ns),
+                 TRN_ZH, DELAY(-1,15ns,23ns),
+                 TRN_ZL, DELAY(-1,18ns,27ns),
+                 TRN_HZ, DELAY(-1,11ns,20ns),
+                 TRN_LZ, DELAY(-1,11ns,17ns),
+                 DELAY(-1,27ns,36ns)
+                )
+            }

Ucnstr CONSTRAINT(8) DPWR DGND
+          7 14 13 12 11 9 10 15
+          IO_LS
+
+      FREQ:
+         NODE = 7
+         MAXFREQ = 30MEG
+      WIDTH:
+         NODE = 7
+         MIN_HI = 25ns
+      WIDTH:
+         NODE = 15
+         MIN_HI = 25ns
+      SETUP_HOLD:
+        CLOCK LH = 7
+        DATA(4) =  14 13 12 11
+        SETUPTIME = 17ns
+        HOLDTIME = 3ns
+      SETUP_HOLD:
+        CLOCK LH = 7
+        DATA(2) =  9 10
+        SETUPTIME = 35ns
*      SETUP_HOLD:
*        CLOCK LH = 7
*        DATA(1) =  15
*        SETUPTIME_LO = 10ns

.ENDS K555IR15
*
*
* ----------------------------------------------------------- K555IV3 ------
*  10-Line To 4-Line Priority Encoders
*
*  The TTL Logic Data Book, 1988, TI Pages 2-451 to 2-456
*  bss    3/21/94
*
.SUBCKT K555IV3 11 12 13 1 2 3 4 5 10 9 7 6 14
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     11 12 13 1 2 3 4 5 10
+     A_O B_O C_O D_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~11}
+     i2bar = {~12}
+     i3bar = {~13}
+     i4bar = {~1}
+     i5bar = {~2}
+     i6bar = {~3}
+     i7bar = {~4}
+     i8bar = {~5}
+     i9bar = {~10}
+     nor89 = {~(i8bar | i9bar)}
+     A_O = {~((i1bar & 12 & 1 & 3 & nor89) | (i3bar & 1 & 3 & nor89) | (i5bar & 3 & nor89) |
+                (i7bar & nor89) | i9bar)}
+     B_O = {~((i2bar & 1 & 2 & nor89) | (i3bar & 1 & 2 & nor89) | (i6bar & nor89) | 
+                (i7bar & nor89))}
+     C_O = {~((i4bar & nor89) | (i5bar & nor89) | (i6bar & nor89) | (i7bar & nor89))}
+     D_O = {~(i8bar | i9bar)}

U2DLY PINDLY(4,0,9) DPWR DGND
+     A_O B_O C_O D_O
+     11 12 13 1 2 3 4 5 10
+     9 7 6 14
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN1 = {CHANGED(11,0) & 12=='1 & 13=='1 & 1=='1 & 2=='1 & 3=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN2 = {CHANGED(12,0) & 11=='1 & 13=='1 & 1=='1 & 2=='1 & 3=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN3 = {CHANGED(13,0) & 11=='1 & 12=='1 & 1=='1 & 2=='1 & 3=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN4 = {CHANGED(1,0) & 11=='1 & 12=='1 & 13=='1 & 2=='1 & 3=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN5 = {CHANGED(2,0) & 11=='1 & 12=='1 & 13=='1 & 1=='1 & 3=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN6 = {CHANGED(3,0) & 11=='1 & 12=='1 & 13=='1 & 1=='1 & 2=='1 & 4=='1 & 5=='1 & 
+               10=='1}
+     IN7 = {CHANGED(4,0) & 11=='1 & 12=='1 & 13=='1 & 1=='1 & 2=='1 & 3=='1 & 5=='1 & 
+               10=='1}
+     IN8 = {CHANGED(5,0) & 11=='1 & 12=='1 & 13=='1 & 1=='1 & 2=='1 & 3=='1 & 4=='1 & 
+               10=='1}
+     IN9 = {CHANGED(10,0) & 11=='1 & 12=='1 & 13=='1 & 1=='1 & 2=='1 & 3=='1 & 4=='1 & 
+               5=='1}   
+     IN = {IN1 | IN2 | IN3 | IN4 | IN5 | IN6 | IN7 | IN8 | IN9}
+
+  PINDLY:
+     9 7 6 = {
+       CASE(
+         IN, DELAY(-1,12ns,18ns),
+         TRN_LH, DELAY(-1,21ns,33ns),
+         TRN_HL, DELAY(-1,15ns,23ns),
+         DELAY(-1,22ns,34ns))}
+
+     14 = {
+       CASE(
+         (IN8 | IN9), DELAY(-1,12ns,18ns),
+         TRN_LH, DELAY(-1,21ns,33ns),
+         TRN_HL, DELAY(-1,15ns,23ns),
+         DELAY(-1,22ns,34ns))}

.ENDS K555IV3
*
*
* ----------------------------------------------------------- KR531ID14 ------
*  Dual 2-Line To 4-Line Decoder/Demultiplexer
*
*  The TTL Logic Data Book, 1988, TI Pages 2-431 to 2-434
*  bss    3/17/94
*
.SUBCKT KR531ID14 2 3 1 4 5 6 7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(3,4) DPWR DGND
+     2 3 1
+     1Y0_O 1Y1_O 1Y2_O 1Y3_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1g = {~1}
+     abar = {~2}
+     bbar = {~3}
+     1Y0_O = {~(abar & bbar & 1g)}
+     1Y1_O = {~(2 & bbar & 1g)}
+     1Y2_O = {~(abar & 3 & 1g)}
+     1Y3_O = {~(2 & 3 & 1g)}

U2DLY PINDLY(4,0,3) DPWR DGND
+     1Y0_O 1Y1_O 1Y2_O 1Y3_O
+     2 3 1
+     4 5 6 7
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN = {CHANGED(2,0) | CHANGED(3,0)}
+     INA = {CHANGED(2,0)}
+     INB = {CHANGED(3,0)}
+     ENABLE = {CHANGED(1,0)}
+
+  PINDLY:
+     4 = {
+       CASE(
+          ENABLE & TRN_LH, DELAY(-1,5ns,8ns),
+          ENABLE & TRN_HL, DELAY(-1,6.5ns,10ns),
+          IN & TRN_LH, DELAY(-1,5ns,7.5ns),
+          IN & TRN_HL, DELAY(-1,6.5ns,10ns),
+          DELAY(-1,7.5ns,11ns))}
+
+     5 = {
+       CASE(
+          ENABLE & TRN_LH, DELAY(-1,5ns,8ns),
+          ENABLE & TRN_HL, DELAY(-1,6.5ns,10ns),
+          INA & TRN_LH, DELAY(-1,7ns,12ns),
+          INA & TRN_HL, DELAY(-1,8ns,12ns),
+          INB & TRN_LH, DELAY(-1,5ns,7.5ns),
+          INB & TRN_HL, DELAY(-1,6.5ns,10ns),
+          DELAY(-1,9ns,13ns))}
+
+     6 = {
+       CASE(
+          ENABLE & TRN_LH, DELAY(-1,5ns,8ns),
+          ENABLE & TRN_HL, DELAY(-1,6.5ns,10ns),
+          INB & TRN_LH, DELAY(-1,7ns,12ns),
+          INB & TRN_HL, DELAY(-1,8ns,12ns),
+          INA & TRN_LH, DELAY(-1,5ns,7.5ns),
+          INA & TRN_HL, DELAY(-1,6.5ns,10ns),
+          DELAY(-1,9ns,13ns))}
+
+     7 = {
+       CASE(
+          ENABLE & TRN_LH, DELAY(-1,5ns,8ns),
+          ENABLE & TRN_HL, DELAY(-1,6.5ns,10ns),
+          IN & TRN_LH, DELAY(-1,7ns,12ns),
+          IN & TRN_HL, DELAY(-1,8ns,12ns),
+          DELAY(-1,9ns,13ns))}

.ENDS KR531ID14

